services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: realtime-todo-postgres
    restart: always
    environment:
      POSTGRES_DB: todoapp
      POSTGRES_USER: JuPegro
      POSTGRES_PASSWORD: Unicotrofeo1
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - todo-network

  # PostgreSQL Database for Testing
  postgres-test:
    image: postgres:15-alpine
    container_name: realtime-todo-postgres-test
    restart: always
    environment:
      POSTGRES_DB: todoapp_test
      POSTGRES_USER: JuPegro
      POSTGRES_PASSWORD: Unicotrofeo1
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./backend/prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - todo-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: realtime-todo-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@todoapp.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - todo-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: realtime-todo-backend
    restart: always
    environment:
      DATABASE_URL: postgresql://JuPegro:Unicotrofeo1@postgres:5432/todoapp
      JWT_SECRET: JuPegro_realtime_app
      JWT_EXPIRES_IN: 7d
      PORT: 3000
      NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - todo-network

volumes:
  postgres_data:
  postgres_test_data:

networks:
  todo-network:
    driver: bridge